
Event Object
============

A standard JavaScript object that FullCalendar uses to store information about a calendar event.
Here are its properties:


<!-- TODO: get this out of a table! -->

<table>
<!-- ------------------- -->
<tr>
<th>
id
</th>
<td markdown='block'>
String/Integer. Optional

Uniquely identifies the given event. Different instances of repeating events should all have the same `id`.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
title
</th>
<td markdown='block'>
String. *Required*.

The text on an event's element
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
allDay
</th>
<td markdown='block'>
`true` or `false`. Optional.

Whether an event occurs at a specific time-of-day. This property affects whether an event's time is shown.
Also, in the agenda views, determines if it is displayed in the "all-day" section.

If this value is not explicitly specified, FullCalendar will try to guess.
If either the `start` or `end` value has hours/minutes/seconds or a `"T"` as part of the ISO8601
date string, `allDay` will become `false`. Otherwise, it will be `true`.

**Don't include quotes** around your `true`/`false`. This value is a boolean, not a string!
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>	
start
</th>
<td markdown='block'>
[Moment](../utilities/Moment). *Required*.

The date/time an event begins.

A Moment object is accepted, as well as anything the Moment constructor accepts.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
end
</th>
<td markdown='block'>
[Moment](../utilities/Moment). Optional.

The **exclusive** date/time an event ends.

It is the moment immediately *after* the event has ended.
For example, if the last full day of an event is **Thursday**, the exclusive
end of the event will be **Friday**!


A Moment object is accepted, as well as anything the Moment constructor accepts.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>	
url
</th>
<td markdown='block'>
String. Optional.

A URL that will be visited when this event is clicked by the user.
For more information on controlling this behavior, see the [eventClick](../mouse/eventClick) callback.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>	
className
</th>
<td markdown='block'>
String/Array. Optional.

A CSS class (or array of classes) that will be attached to this event's element.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
editable
</th>
<td markdown='block'>
`true` or `false`. Optional.

Overrides the master [editable](../event_ui/editable) option for this single event.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
startEditable
</th>
<td markdown='block'>
`true` or `false`. Optional.

Overrides the master [eventStartEditable](../event_ui/eventStartEditable) option for this single event.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
durationEditable
</th>
<td markdown='block'>
`true` or `false`. Optional.

Overrides the master [eventDurationEditable](../event_ui/eventDurationEditable) option for this single event.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
source
</th>
<td markdown='block'>
[Event Source Object](). Automatically populated.

A reference to the event source that this event came from.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
color
</th>
<td markdown='block'>
Sets an event's background *and* border color just like
the calendar-wide [eventColor](../event_rendering/eventColor) option.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
backgroundColor
</th>
<td markdown='block'>
Sets an event's background color just like
the calendar-wide [eventBackgroundColor](../event_rendering/eventBackgroundColor) option.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
borderColor
</th>
<td markdown='block'>
Sets an event's border color just like the
the calendar-wide [eventBorderColor](../event_rendering/eventBorderColor) option.
</td>
</tr>
<!-- ------------------- -->
<tr>
<th>
textColor
</th>
<td markdown='block'>
Sets an event's text color just like
the calendar-wide [eventTextColor](../event_rendering/eventTextColor) option.
</td>
</tr>
</table>


Non-standard Fields
-------------------
	
In addition to the fields above, you may also include your own non-standard fields
in each Event Object. FullCalendar will not modify or delete these fields.
For example, developers often include a `description` field for use in callbacks such
as [eventRender](../event_rendering/eventRender).
